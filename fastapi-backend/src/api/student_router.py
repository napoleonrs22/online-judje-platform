# fastapi-backend/src/api/student_router.py

from typing import List, Dict  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Dict
from fastapi import APIRouter, Depends, status
from sqlalchemy.ext.asyncio import AsyncSession
import uuid  # –ù—É–∂–µ–Ω –¥–ª—è user_id –∑–∞–≥–ª—É—à–∫–∏

from ..database import get_db
from ..schemas.schemas import SubmissionCreate, SubmissionResponse, ProblemBase
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å—ã
from ..repository.problem_repository import ProblemRepository
from ..repository.submission_repository import SubmissionRepository
from ..services.problem_service import ProblemService
from ..services.submission_service import SubmissionService

student_router = APIRouter(prefix="/api/student", tags=["–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å—Ç—É–¥–µ–Ω—Ç–∞"])


# üí° –ù–û–í–ê–Ø –ï–î–ò–ù–ê–Ø –ó–ê–í–ò–°–ò–ú–û–°–¢–¨: –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –æ–±–æ–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏
async def get_services(db: AsyncSession = Depends(get_db)) -> Dict:
    problem_repo = ProblemRepository(db)
    submission_repo = SubmissionRepository(db)

    # üî• –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ò–ú–ï–ù–û–í–ê–ù–ù–´–ï –ê–†–ì–£–ú–ï–ù–¢–´ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—É—Ç–∞–Ω–∏—Ü—ã!
    # –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ problem_repository –≤ —Å–µ—Ä–≤–∏—Å–µ –ø–æ–ª—É—á–∏—Ç ProblemRepository.
    submission_service = SubmissionService(
        submission_repository=submission_repo,
        problem_repository=problem_repo
    )
    problem_service = ProblemService(problem_repo, submission_repo)  # ProblemService –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–µ –∏–º–µ–Ω–∞

    return {
        "problem": problem_service,
        "submission": submission_service,
    }


@student_router.post("/submissions", status_code=status.HTTP_202_ACCEPTED, response_model=SubmissionResponse)
async def submit_solution(
        submission_data: SubmissionCreate,
        services: Dict = Depends(get_services)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ª–æ–≤–∞—Ä—å
):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ—à–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–º –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –≤ Go-Executor."""

    # –ò–º–∏—Ç–∞—Ü–∏—è ID —Å—Ç—É–¥–µ–Ω—Ç–∞
    user_id = uuid.uuid4()

    # üí° –í—ã–∑—ã–≤–∞–µ–º SubmissionService –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    response = await services["submission"].submit_solution(submission_data, user_id)

    return response


@student_router.get("/problems", response_model=List[ProblemBase])
async def list_problems(
        services: Dict = Depends(get_services)  # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ª–æ–≤–∞—Ä—å
):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á."""
    # üí° –í—ã–∑—ã–≤–∞–µ–º ProblemService
    problems = await services["problem"].problem_repo.list_public_problems()

    return problems